import tensorflow as tf


# B0
# model = tf.keras.applications.efficientnet_v2.EfficientNetV2B0(
#         include_top=False, input_shape=(300,300,3), weights="imagenet"
# )
# model.summary()
# --------------------------------------
# Total params: 5,919,312
# Trainable params: 5,858,704
# Non-trainable params: 60,608
# --------------------------------------
# model = tf.keras.applications.efficientnet_v2.EfficientNetV2B0(
#         include_top=True, weights="imagenet"
# )
# model.summary()
# --------------------------------------
# Total params: 7,200,312
# Trainable params: 7,139,704
# Non-trainable params: 60,608


# B1
# model = tf.keras.applications.efficientnet_v2.EfficientNetV2B1(
#         include_top=False, input_shape=(300,300,3), weights="imagenet"
# )
# model.summary()
# --------------------------------------
# Total params: 6,931,124
# Trainable params: 6,860,052
# Non-trainable params: 71,072
# --------------------------------------
# model = tf.keras.applications.efficientnet_v2.EfficientNetV2B1(
#         include_top=True, weights="imagenet"
# )
# model.summary()
# --------------------------------------
# Total params: 8,212,124
# Trainable params: 8,141,052
# Non-trainable params: 71,072


# B2
# model = tf.keras.applications.efficientnet_v2.EfficientNetV2B2(
#         include_top=False, input_shape=(300,300,3), weights="imagenet"
# )
# model.summary()
# --------------------------------------
# Total params: 8,769,374
# Trainable params: 8,687,086
# Non-trainable params: 82,288
# --------------------------------------
# model = tf.keras.applications.efficientnet_v2.EfficientNetV2B2(
#         include_top=True, weights="imagenet"
# )
# model.summary()
# --------------------------------------
# Total params: 10,178,374
# Trainable params: 10,096,086
# Non-trainable params: 82,288


# B3
# model = tf.keras.applications.efficientnet_v2.EfficientNetV2B3(
#         include_top=False, input_shape=(300,300,3), weights="imagenet"
# )
# model.summary()
# --------------------------------------
# Total params: 12,930,622
# Trainable params: 12,821,406
# Non-trainable params: 109,216
# --------------------------------------
# model = tf.keras.applications.efficientnet_v2.EfficientNetV2B3(
#         include_top=True, weights="imagenet"
# )
# model.summary()
# --------------------------------------
# Total params: 14,467,622
# Trainable params: 14,358,406
# Non-trainable params: 109,216


# S
# model = tf.keras.applications.efficientnet_v2.EfficientNetV2S(
#         include_top=False, input_shape=(300,300,3), weights="imagenet"
# )
# model.summary()
# --------------------------------------
# Total params: 20,331,360
# Trainable params: 20,177,488
# Non-trainable params: 153,872
# --------------------------------------
# model = tf.keras.applications.efficientnet_v2.EfficientNetV2S(
#         include_top=True, weights="imagenet"
# )
# model.summary()
# --------------------------------------
# Total params: 21,612,360
# Trainable params: 21,458,488
# Non-trainable params: 153,872


# M
# model = tf.keras.applications.efficientnet_v2.EfficientNetV2M(
#         include_top=False, input_shape=(300,300,3), weights="imagenet"
# )
# model.summary()
# --------------------------------------
# Total params: 53,150,388
# Trainable params: 52,858,356
# Non-trainable params: 292,032
# --------------------------------------
# model = tf.keras.applications.efficientnet_v2.EfficientNetV2M(
#         include_top=True, weights="imagenet"
# )
# model.summary()
# --------------------------------------
# Total params: 54,431,388
# Trainable params: 54,139,356
# Non-trainable params: 292,032


# L
# model = tf.keras.applications.efficientnet_v2.EfficientNetV2L(
#         include_top=False, input_shape=(300,300,3), weights="imagenet"
# )
# model.summary()
# --------------------------------------
# Total params: 117,746,848
# Trainable params: 117,234,272
# Non-trainable params: 512,576
# --------------------------------------
# model = tf.keras.applications.efficientnet_v2.EfficientNetV2L(
#         include_top=True, weights="imagenet"
# )
# model.summary()
# --------------------------------------
# Total params: 119,027,848
# Trainable params: 118,515,272
# Non-trainable params: 512,576


# VGG16
model = tf.keras.applications.VGG16(
        include_top=False, input_shape=(300,300,3), weights="imagenet"
)
# model.summary()
# --------------------------------------
# Total params: 14,714,688
# Trainable params: 14,714,688
# Non-trainable params: 0
# --------------------------------------
# --------------------------------------


# for layer in model.layers[:15]:
#     layer.trainable = False

# x = tf.keras.layers.GlobalAveragePooling2D()(model.layers[-1].output)
# x = tf.keras.layers.Dense(2, activation="softmax")(x)
# model = tf.keras.models.Model(model.inputs, x)
# for i, layer in enumerate(model.layers):
#     if i==0:
#         input = layer.input
#         x = input
#     else:
#         if "conv" in layer.name:
#             layer.activation = tf.keras.activations.linear
#             x = layer(x)
#             x = tf.keras.layers.BatchNormalization()(x)
#             x = tf.keras.layers.Activation("relu")(x)
#         else:
#             x = layer(x)
# model = tf.keras.models.Model(input, x)
# model.summary()
# --------------------------------------
# Total params: 14,732,610
# Trainable params: 14,724,162
# Non-trainable params: 8,448


# base_model = tf.keras.applications.DenseNet121(
#     weights="imagenet",
#     include_top=False,
#     input_shape=(300,300,3),
# )
# model = tf.keras.models.Sequential()
# model.add(base_model)
# model.add(tf.keras.layers.Flatten())
# model.add(tf.keras.layers.Dense(1024, activation='relu'))
# model.add(tf.keras.layers.BatchNormalization())
# model.add(tf.keras.layers.Dropout(0.3))
# model.add(tf.keras.layers.Dense(512, activation='relu'))
# model.add(tf.keras.layers.BatchNormalization())
# model.add(tf.keras.layers.Dropout(0.2))
# model.add(tf.keras.layers.Dense(11, activation='softmax'))
# model.summary()
# --------------------------------------
# Total params: 92,509,771
# Trainable params: 92,423,051
# Non-trainable params: 86,720


# VGG19
# model = tf.keras.applications.VGG19(
#         include_top=False, input_shape=(224,224,3), weights="imagenet"
# )
# model.summary()
# --------------------------------------
# Total params: 20,024,384
# Trainable params: 20,024,384
# Non-trainable params: 0
# --------------------------------------
# model = tf.keras.applications.VGG19(
#         include_top=True, weights="imagenet"
# )
# model.summary()
# --------------------------------------
# Total params: 143,667,240
# Trainable params: 143,667,240
# Non-trainable params: 0


# InceptionV3
# model = tf.keras.applications.InceptionV3(
#         include_top=False, input_shape=(300,300,3), weights="imagenet"
# )
# model.summary()
# --------------------------------------
# Total params: 21,802,784
# Trainable params: 21,768,352
# Non-trainable params: 34,432
# --------------------------------------
# model = tf.keras.applications.InceptionV3(
#         include_top=True, weights="imagenet"
# )
# model.summary()
# --------------------------------------
# Total params: 23,851,784
# Trainable params: 23,817,352
# Non-trainable params: 34,432


# ResNet152
# model = tf.keras.applications.ResNet152(
#         include_top=False, input_shape=(300,300,3), weights="imagenet"
# )
# model.summary()
# --------------------------------------
# --------------------------------------
# --------------------------------------


# DenseNet121
# model = tf.keras.applications.DenseNet121(
#         include_top=False, input_shape=(300,300,3), weights="imagenet"
# )
# model.summary()
# --------------------------------------
# Total params: 7,037,504
# Trainable params: 6,953,856
# Non-trainable params: 83,648
# --------------------------------------
# model = tf.keras.applications.DenseNet121(
#         include_top=True, weights="imagenet"
# )
# model.summary()
# --------------------------------------


# DenseNet201
# model = tf.keras.applications.DenseNet201(
#         include_top=False, input_shape=(300,300,3), weights="imagenet"
# )
# model.summary()
# --------------------------------------
# Total params: 18,321,984
# Trainable params: 18,092,928
# Non-trainable params: 229,056
# --------------------------------------
# model = tf.keras.applications.DenseNet201(
#         include_top=True, weights="imagenet"
# )
# model.summary()
# --------------------------------------
# Total params: 20,242,984
# Trainable params: 20,013,928
# Non-trainable params: 229,056


# Xception
# model = tf.keras.applications.Xception(
#         include_top=False, input_shape=(300,300,3), weights="imagenet"
# )
# model.summary()
# --------------------------------------
# --------------------------------------
# model = tf.keras.applications.Xception(
#         include_top=True, weights="imagenet"
# )
# model.summary()
# --------------------------------------
# Total params: 22,910,480
# Trainable params: 22,855,952
# Non-trainable params: 54,528


# EfficientNetB0
# model = tf.keras.applications.efficientnet.EfficientNetB0(
#         include_top=False, input_shape=(300,300,3), weights="imagenet"
# )
# model.summary()
# --------------------------------------
# --------------------------------------
# model = tf.keras.applications.efficientnet.EfficientNetB0(
#         include_top=True, weights="imagenet"
# )
# model.summary()
# --------------------------------------
# Total params: 5,330,571
# Trainable params: 5,288,548
# Non-trainable params: 42,023


# EfficientNetB1
# model = tf.keras.applications.efficientnet.EfficientNetB1(
#         include_top=False, input_shape=(300,300,3), weights="imagenet"
# )
# model.summary()
# --------------------------------------
# --------------------------------------
# model = tf.keras.applications.efficientnet.EfficientNetB1(
#         include_top=True, weights="imagenet"
# )
# model.summary()
# --------------------------------------
# Total params: 7,856,239
# Trainable params: 7,794,184
# Non-trainable params: 62,055


# EfficientNetB2
# model = tf.keras.applications.efficientnet.EfficientNetB2(
#         include_top=False, input_shape=(300,300,3), weights="imagenet"
# )
# model.summary()
# --------------------------------------
# --------------------------------------
# model = tf.keras.applications.efficientnet.EfficientNetB2(
#         include_top=True, weights="imagenet"
# )
# model.summary()
# --------------------------------------
# Total params: 9,177,569
# Trainable params: 9,109,994
# Non-trainable params: 67,575
